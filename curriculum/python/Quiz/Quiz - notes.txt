---
제목: 퀴즈 – 클럽 리더를 위한 노트
언어: ko-KR
embeds: "*.png"
...

#소개:
이 프로젝트는 아이들에게 프로그램에서 선택(`if`, `else` 와 `elif` statements) 을 사용해서 프로그램 흐름을 데이터에 반응해서 바꾸게 만드는 방법을 가르칩니다. 이것은 텍스트와 객관식 문제가 포함된 간단한 퀴즈 프로그램을 만들고 시험해보는 것으로 익힐 것 입니다.

#소재
이 프로젝트에는 파이썬이 필요합니다. 파이썬 3.2를 인스톨하는 것을 권장합니다.


아이들은 또한 이 도전과제와 함께 오는 소재들이 필요합니다. 'Project Resources' 폴더('Download Project Materials' 링크 아래에서 찾을 수 있는)에 있는 소재들은:
+ Quiz.py

아이들이 이 소재들을 가지고 읽고 쓸 권한이 있는지 확인해주세요.

#배움 목표
+ 다음을 사용한 선택:
	+ `if`;
	+ `else`;
	+ `elif`.
+ 프로그램 시험과 문제해결.

#도전과제
+ 질문 시간- `if` 와 `else`를 사용해서 퀴즈 답에 대한 반응 보이기; 
+ 퀴즈 고치기- `.lower()` 메소드를 통해 답 반응의 에러 고치기;
+ 객관식 퀴즈- `elif` 를 사용해서 객관식 문제 더하기;
+ 점수 세기- `score` 변수를 더해 점수 확인하기;
+ 얼마나 잘했 나요? - `if` 와 `else` statements의 사용을 넓혀 퀴즈가 끝났을 때 점수에 따라 메시지 표기하기 

#자주 묻는 질문들
+ 플레이어의 입력이 텍스트로 저장되기 때문에 숫자가 포함된 답 또한 텍스트로 표현되야 됩니다. 예를 들면:

```python
if answer == "4":
	...
```

and *not*:

```python
if answer == 4:
	...
```

또한 대안으로 플레이어의 답을 숫자로 cast 하고 두 숫자를 비교하는 방법도 있습니다:

```python
answer = int(answer)
if answer == 4:
	...
```

+ 각 `if`/`else`/`elif` statement 는 콜론으로 끝나야 합니다.

+`if`/`else`/`elif` statement의 바디는 동일한 간격으로 인덴트 되어야 합니다. 탭 키를 사용하면 인덴트 실수가 더 쉽게 보이니 탭 키를 사용하는 걸 추천합니다. 예를 들자면 다음 프로그램은 실행되지 않습니다:

```python
if answer == "variable":
   print("Well done")
  print("---------")
    print(" :) ")
 )
```

+ 아이들은 `=` (변수 지정에 사용) 와`==` (동일한가를 확인하는데 사용)의 차이를 기억하도록 해야 합니다.
