---
제목: 나만의 세계 만들기
난이도: Scratch 2
언어: ko-KR
stylesheet: scratch
embeds: "*.png"
materials: ["Club Leader Resources/*","Project Resources/*"]
...

# 소개 { .intro }

이 프로젝트에선 오픈 월드 탐험 게임을 만들어볼 것입니다.

<div class="scratch-preview">
  <iframe allowtransparency="true" width="485" height="402" src="http://scratch.mit.edu/projects/embed/34248822/?autostart=false" frameborder="0"></iframe>
  <img src="world-final.png">
</div>

# 1 단계: 플레이어 코딩하기 { .activity }

이 세계에서 돌아다닐 플레이어를 만드는 것으로 시작합시다.

## 단계별 체크리스트 { .check }


+ 새 스크래치 프로젝트를 시작하고 고양이 스프라이트를 지워서 프로젝트를 비게 만드세요. 온라인 스크래치 에디터는 <a href="http://jumpto.cc/scratch-new">jumpto.cc/scratch-new</a> 에서 찾을 수 있습니다.

+ 이 프로젝트엔 필요하게 될 모든 이미지가 들어 있는 'Project Resources' 폴더가 필요합니다. 이 폴더를 찾아 두고 없다면 클럽 리더에게 꼭 받도록 하세요.

	![screenshot](world-resources.png)

+ 스테이지 배경으로 'room1.png'을 더하고 'player.png' 스프라이트를 더하세요. 이 이미지들이 없다면 직접 그릴 수도 있습니다! 프로젝트의 예시 입니다:

	![screenshot](world-player.png)

+ 화살키로 플레이어를 움직일 수 있게 만듭시다. 위쪽 화살표를 누르면 플레이어의 y좌표를 바꿔서 위쪽으로 움직일 수 있게 합니다. 이 코드를 플레이어 스프라이트에 더하세요:

```blocks

깃발 클릭했을 때
무한 반복하기
   만약 <[위쪽 화살표 v] 키를 눌렀는가?> 라면
      y좌표를 (2) 만큼 바꾸기
   end
end
```

+ 녹색 깃발을 클릭하고 플레이어를 위로 움직여 보세요. 움직이나요?

	![screenshot](world-up.png)

+ 플레이어를 왼쪽으로 움직이기 위해 플레이어 에게 또 다른 `만약에` {.blockcontrol} 블록을 더해 x좌표를 바꾸게 만듭시다:

```blocks

깃발 클릭했을 때
무한 반복하기
   만약 <[위쪽 화살표 v] 키를 눌렀는가?> 라면
      y좌표를 (2) 만큼 바꾸기
   end
   만약 <[왼쪽 화살표 v] 키를 눌렀는가?> 라면
      x좌표를 (-2) 만큼 바꾸기
   end
end
```

## 도전과제: 4 방향으로 움직이기 {.challenge}
플레이어에 코드를 더해서 4방향 모두로 움직일 수 있게 만들 수 있나요? 위의 코드들을 응용해보세요!

## 프로젝트를 저장하세요 { .save }

+ 플레이어를 다시 시험해보면 회색으로 표기된 벽을 뚫고 움직일 수 있는게 보입니다.

	![screenshot](world-walls.png)

+ 이 문제를 고치려면 플레이어가 움직이다가 회색 벽을 만나면 다시 뒤로 가도록 만들어야 합니다. 이 코드를 사용하세요:

```blocks

깃발 클릭했을 때
무한 반복하기
   만약 <[위쪽 화살표 v] 키를 눌렀는가?> 라면
      y좌표를 (2) 만큼 바꾸기
      만약 <[#BABABA] 색에 닿기?> 라면
         y좌표를 (-2) 만큼 바꾸기
      end
   end
end
```

	새 `만약에`{.blockcontrol}`색이 닿았는가`{.blocksensing} 블록이 `만약에`{.blockcontrol}`[위쪽 화살표]키를 눌렀는가?`{.blocksensing} 블록 _안쪽에_ 있다는데 주의 해주세요.

+ 이 코드를 시험해보게 벽 아래쪽으로 가봅시다 - 벽을 뚫고 위로 갈 수 없을 것입니다.

	![screenshot](world-walls-test.png)

+ 왼쪽 화살표 키에도 같은 코드를 적용해서 벽에 닿으면 뒤로 가게 만듭시다. 플레이어 코드는 이렇게 짜여 있어야 합니다:

	![screenshot](world-wall-code.png)

## 도전과제: 플레이어의 움직임 제한하기 {.challenge}
코드를 더해서 플레이어가 어떤 방향으로도 벽을 뚫고 갈 수 없게 만드세요. 먼저 쓴 코드를 응용해 보세요!

## 프로젝트 저장하기 { .save }

# 2 단계: 내 세계 코딩하기 { .activity }

플레이어가 문을 통해서 다른 방으로 들어갈 수 있게 만듭시다!

## 단계별 체크리스트 { .check }

+ 스테이지에 배경 두가지('room2.png' 와 'room3.png')를 더해 총 세개의 배경이 있도록 만드세요. 배경들이 차례대로 있도록 만드세요- 나중에 도움이 됩니다.

	![screenshot](world-backdrops.png)

+ 새 변수 `room` {.blockdata}을 만들어 플레이어가 어느 방에 있는지 기억하도록 해야합니다.

	![screenshot](world-room.png)

+ 플레이어가 첫번째 방의 주황색 문에 닿으면 다음 배경이 보이고 플레이어는 스테이지 왼쪽으로 돌아가야 합니다. 다음 코드를 플레이어의 `무한 반복하기` {.blockcontrol} 루프 안쪽에 넣으세요:

```blocks
만약 <[#F2A24A] 색에 닿기?> 라면
   배경을 [다음 배경으로 바꾸기 v] (으)로 바꾸기
   x:(-200) y:(0) 로 이동하기
   [room v] 을(를) (1) 만큼 바꾸기
end
```

+ 이 코드를 플레이어의 코드 _시작_ 부분에 (`무한 반복하기` {.blockcontrol} 루프 앞에) 넣어서 깃발을 클릭하면 모든 게 리셋 되도록 만드세요:

```blocks
[room v] 에 (1) 저장하기
x:(-200) y:(0) 로 이동하기
배경을 [room1 v] (으)로 바꾸기
```

+ 깃발을 클릭하고 플레이어를 주황색 문 앞으로 움직이세요. 플레이어가 다음 배경으로 넘어가나요? `room` {.blockdata} 변수가 2로 바뀌나요?

	![screenshot](world-room-test.png)

## 도전과제: 이전 방으로 돌아가기 {.challenge}
노란색 문에 닿으면 플레이어가 이전 방으로 돌아가게 만들 수 있나요? 이 코드는 방금 만들었던 다음 방으로 넘어가는 코드와 _매우_ 유사하다는 걸 기억하세요.

## 프로젝트를 저장하세요 { .save }

# 3 단계: 표지판 { .activity }

이 세계에 표지판을 더해서 플레이어를 안내해 줄 수 있게 만듭시다.

## 단계별 체크리스트 { .check }

+ 'sign.svg' 스프라이트를 업로드하고 'welcome sign'이라고 이름 지으세요.

	![screenshot](world-sign.png)

+ 이 표지판은 1번 방에서만 보여야 하니 코드를 더해 1번 방에서만 보이도록 만듭시다:

```blocks

깃발 클릭했을 때
무한 반복하기
   만약 <(room) = [1]> 라면
      보이기
   아니면
      숨기기
   end
end
```

+ 방 사이를 다녀서 표지판이 1번 방에서만 보이는지 확인하세요.

	![screenshot](world-sign-test.png)

+ 표지판에 아무 말도 적혀 있지 않다면 의미가 없습니다! 코드를 (다른 블록으로) 더해 플레이어가 표지판에 닿으면 메시지를 표기하도록 만듭시다:

```blocks

깃발 클릭했을 때
무한 반복하기
   만약 <[player v] 에 닿기?> 라면
      [어서 오세요! 보물을 가져갈 수 있으실 까요?] 말하기
   아니면
      [] 말하기
   end
end
```

+ 표지판을 확인해서 플레이어가 닿았을 때 메시지가 나오는지 확인하세요.

	![screenshot](world-sign-test2.png)

## 프로젝트를 저장합니다 { .save }

## 도전과제: 보물! {.challenge}
'chest.svg'이미지를 사용해서 보물상자 스프라이트를 만들어 넣을 수 있나요? 보물상자는 3번 방에 둬야 하고 플레이어가 닿으면 'Well Done!' 이라고 말하게 만듭시다.

![screenshot](world-treasure.png)

## 프로젝트를 저장하세요 { .save }

# 4 단계: 사람들 { .activity }

플레이어와 상호작용할 수 있는 다른 사람들을 세계에 더해봅시다.

## 단계별 체크리스트 { .check }

+ 'person.png'를 사용해서 다른 사람 스프라이트를 넣으세요.

	![screenshot](world-person.png)

+ 이 코드를 더해 이 사람이 플레이어에게 말을 걸 수 있게 만드세요. 이 코드는 표지판에 사용했던 코드와 매우 비슷합니다:

```blocks

깃발 클릭했을 때
x:(-200) y:(0) 로 이동하기
무한 반복하기
   만약 <[player v] 에 닿기?> 라면
      [주황색과 노란색 문은 지나갈 수 있다는 것 아시 나요?] 말하기
   아니면
      [] 말하기
   end
end
```

+ 또한 이 블록들을 사용해서 이 사람이 움직일 수 있게 만들 수 있습니다:

```blocks
(1) 만큼 움직이기
벽에 닿으면 튕기기
```

	이 코드를 `무한 반복하기` {.blockcontrol} 루프에 넣느냐 혹은 `만약에` {.blockcontrol} 블록에 넣느냐 에 따라 매우 다르게 행동할 것입니다. 양쪽 다 시험 해보고 어느 쪽이 더 좋은 지 골라보세요.

	![screenshot](world-person-test.png)

+ 이 사람이 위 아래로 뒤집어지는 문제를 보셨 나요? 이 문제를 해결하려면 스프라이트의 'info' 아이콘(`info` {.blockmotion}) 을 클릭하고 점에 클릭해서 회전 방식을 고정해주세요.

	![screenshot](world-person-rotate.png)

## 도전과제: 사람 개선하기{.challenge}
이 사람에게 코드를 더해 넣어서 1번 방에서만 나오게 만들 수 있나요? 코드가 작동하는지 꼭 확인하세요!

## 프로젝트를 저장하세요 { .save }

+ 또한 플레이어가 건드리면 게임이 끝나는 적들을 더할 수도 있습니다. 적 스프라이트를 더하고 사람 스프라이트에 했던 것처럼 회전 방식을 바꿔주세요.

+ 적에게 코드를 더해서 2번 방에서만 나오게 만들어 주세요.

+ 또한 적이 움직이고 플레이어에 닿으면 게임을 끝내게 하는 코드가 필요합니다. 이건 각각 다른 코드 블록을 사용하는게 더 쉽습니다. 적의 코드는 이렇게 되야 합니다:

	![screenshot](world-enemy-code.png)

+ 적을 시험해서 다음을 확인해주세요:
	+ 2번방에서만 보이는가;
	+ 방 안을 돌아다니는가;
	+ 플레이어가 건드리면 게임이 끝나는가.

## 프로젝트를 저장하세요 { .save }

## 도전과제: 더 많은 적들 {.challenge}
벽들 사이에서 위 아래로 보초를 서는 적을 3번 방에 만들어 줄 수 있나요?

![screenshot](world-enemy2.png)

## 프로젝트를 저장하세요 { .save }

# 5 단계: 코인 모으기 { .activity }

## 단계별 체크리스트 { .check }

+ 새 변수 `coins` {.blockdata} 를 프로젝트에 더해주세요.

+ 프로젝트에 'coin' 스프라이트를 더해주세요.

![screenshot](world-coins.png)

+ 코인에 코드를 더해 1번 방에서만 나타나게 만들어 주세요.

+ 코인 스프라이트에 코드를 더해 주워 진 후 `coins` {.blockdata} 변수가 1씩 올라가도록 만들어 주세요:

```blocks

깃발 클릭했을 때
<[player v] 에 닿기?> 까지 기다리기
[coins v] 을(를) (1) 만큼 바꾸기
[스프라이트에 있는 다른 스크립트 v] 멈추기
숨기기
```

	`[스프라이트에 있는 다른 스크립트] 멈추기` {.blockcontrol} 코드는 1번 방에서 코인이 주워 진 후 더이상 보이지 않게 하기 위해 필요합니다.

+ 또한 `coins` {.blockdata} 변수가 게임이 시작할 때 0으로 시작하게 만들 코드가 필요합니다.

+ 프로젝트를 시험해보세요 - 코인을 주우면 점수가 1로 올라가야 합니다.

## 도전과제: 더 많은 코인 {.challenge}
게임에 코인을 더 만들어 넣을 수 있나요? 다른 방에 있어도 되고 코인 몇개는 적들에게 지켜지고 있을 수도 있습니다.

# 6 단계: 문과 열쇠 { .activity }

## 단계별 체크리스트 { .check }

+ 'key-blue.svg' 이미지로 새 스프라이트를 만드세요. 스테이지 배경을 3으로 바꾸고 열쇠를 얻기 어려운 곳에 배치해 주세요!

 	![screenshot](world-key.png)

+ 열쇠가 3번 방에서만 보이게 만들어 주세요.

+ 새 리스트 변수 `inventory` {.blockdata}를 만들어 주세요. 플레이어가 모은 아이템들을 저장할 변수입니다.

+ 열쇠를 줍는데 필요한 코드는 코인을 줍는데 필요한 코드와 매우 비슷합니다. 다른 점이라면 열쇠는 인벤토리에 더한다는 것입니다.

```blocks

깃발 클릭했을 때
<[player v] 에 닿기?> 까지 기다리기
[blue key]에 [inventory v] 추가하기
[스프라이트에 있는 다른 스크립트 v] 멈추기
숨기기
```

+ 열쇠를 주워서 인벤토리에 넣을 수 있나 시험해보세요. 게임 시작 때 인벤토리를 비우는 코드를 스테이지에 더하는 걸 잊지 마세요.

```blocks
(모두 v) 번째 항목을 [inventory v] 에서 삭제하기
```

+ 'door-blue.png' 이미지로 새 스프라이트를 만들고 파란색 문을 벽 사이의 공간에 놓으세요.

	![screenshot](world-door.png)

+ 이 문에 3번 방에서만 보이는 코드를 넣으세요.

+ 파란색 열쇠가 인벤토리에 있으면 파란색 문을 숨겨서 플레이어가 지나갈 수 있게 만들어야 합니다.

```blocks

깃발 클릭했을 때
<[inventory v] 에 [blue key] 포함?> 까지 기다리기
[스프라이트에 있는 다른 스크립트 v] 멈추기
숨기기
```

+ 프로젝트를 시험해서 파란색 키를 얻어 파란색 문을 열 수 있는지 확인하세요!

## 프로젝트를 저장하세요 { .save }

## 도전과제: 내 세계를 만들자 {.challenge}
이제 나만의 세계를 더 만들어 보세요. 몇가지 아이디어들입니다:

+ 게임의 설정과 그래픽을 바꿔보세요;
+ 게임에 음향효과와 배경음악을 더해보세요;
+ 더 많은 사람들과 적들, 표지판과 코인을 더해보세요=
+ 각각의 맞는 열쇠가 필요할 붉은색과 노란색 문을 만들어 보세요;
+ 더 많은 방을 더해보세요;
+ 게임에 도움이 될 더 많은 아이템을 더해보세요;

+ 코인을 사용해서 사람들에게 유용한 정보를 얻게 만들어 보세요;

	![screenshot](world-bribe.png)

+ 또한 북쪽과 남쪽에 문을 더해 플레이어가 4방향 모두로 움직일 수 있게 만들 수도 있습니다. 예를 들어서 9개의 방이 있다면 3x3 그리드에 놓는다고 생각하세요. 방 번호에 3을 더해 1단계 내려가게 만들 수 있습니다.

	![screenshot](world-north-south.png)

## 프로젝트를 저장하세요 { .save }

